Array deletion:
package sample;
import java.util.Arrays;
import java.util.Scanner;
public class Arraydeletion {
public static void main(String[] agrs) {
	Scanner sc=new Scanner(System.in);
	int a[]=new int[20];
	System.out.println("Enter a size:");
	int size=sc.nextInt();
	for(int i=0;i<size;i++)
	{
		a[i]=sc.nextInt();
	}
	for(int i=0;i<size;i++)
	{
		System.out.println(a[i]);
	}
	System.out.println("Enter the delpos:");
	int delpos=sc.nextInt();
    for(int mypos=delpos-1;mypos<size;mypos++)
    {
    	a[mypos]=a[mypos+1];
    }
    	size--;
    	System.out.println(Arrays.toString(a));
    }
}




Sinlgy linked list
package sample;

class Linked_ex {
 static class Node {
     int data;
     Node next;
     Node(int data) {
         this.data = data;
         this.next = null;
     }
 }
 Node head;
  public void insert(int data) {
     Node newNode = new Node(data);
     if (head == null) {
         head = newNode;
         return;
     }
     
     Node current = head;
     while (current.next != null) {
         current = current.next;
     }
     current.next = newNode;
 }

 public void display() {
     if (head == null) {
         System.out.println("List is empty.");
         return;
     }
     
     Node current = head;
     while (current != null) {
         System.out.print(current.data + " -> ");
         current = current.next;
     }
     System.out.println("null");
 }
 public void delete(int key) {
     if (head == null) {
         System.out.println("List is empty.");
         return;
     }
          if (head.data == key) {
         head = head.next;
         return;
     }
     
     Node current = head;
     while (current.next != null && current.next.data != key) {
         current = current.next;
     }
          if (current.next == null) {
         System.out.println("Node with value " + key + " not found.");
         return;
     }
     
     current.next = current.next.next;
 }
 public static void main(String[] args) {
    Linked_ex list = new Linked_ex();
         list.insert(10);
     list.insert(20);
     list.insert(30);
     list.insert(40);
     
     System.out.println("Linked List:");
     list.display();
          list.delete(20);
     System.out.println("After deleting node with value 20:");
     list.display();
          list.delete(100);
 }
}



